name: Aqua and Terraform Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      demo_push:
        description: 'Trigger pipeline manually'
        required: true
        default: 'false'
  pull_request_target:
    types: [opened, synchronize]

jobs:
  aqua_and_terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}
          
      # Add this step to configure Git as suggested
      - name: Configure Git
        run: |
          /usr/bin/git config --global --add safe.directory /github/workspace

      - name: Run Aqua scanner
        uses: docker://aquasec/aqua-scanner
        with:
          args: trivy fs --scanners config,vuln,secret .
          # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
          # To enable SAST scanning, add: --sast
          # To enable reachability scanning, add: --reachability
          # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
        env:
          AQUA_KEY: ${{ secrets.AQUA_KEY }}
          AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
          GITHUB_TOKEN: ${{ github.token }}
          TRIVY_RUN_AS_PLUGIN: 'aqua'
          # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set region ${{ secrets.AWS_REGION }}

      - name: Set Git Identity
        run: |
          git config --global user.email "mrjcampbell@hotmail.com"
          git config --global user.name "Sonnambulo"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest
          terraform_wrapper: false

      - name: Initialize Terraform
        run: terraform init

      - name: Plan Terraform and save changes
        run: |
          PLAN=$(terraform plan -no-color)
          echo "${PLAN}"
        continue-on-error: true

      - name: Manual Approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GH_TOKEN }}
          approvers: sonnambulo

      # Apply Terraform changes if the pull request is approved
      - name: Apply Terraform Plan
        run: |
          terraform apply -auto-approve "${PLAN}"
